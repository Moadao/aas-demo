
# # Docker Pull Commands
# docker pull eclipsebasyx/aas-registry:1.2.0-SNAPSHOT-CORS
# docker pull eclipsebasyx/aas-server:1.2.0-SNAPSHOT-CORS
# docker pull eclipsebasyx/aas-gui:v221024

# Backend Configuration
# Specifies how the AAS and submodels are loaded:
# InMemory (does not persist data):
aas.backend=InMemory
# MongoDB (persists data in MongoDB):
#aas.backend=MongoDB

# Source Configuration
# Defines the source file for loading the AAS environment:
aas.source=/usr/share/config/oven.aasx
# aas.source=/usr/share/config/Bosch.aasx

# Examples:
# aas.source=aasx/myAAS.aasx
# aas.source=aasx/myAAS.xml
# aas.source=aasx/myAAS.json
# Or from Docker volume:
# aas.source=/usr/share/config/myAAS.aasx

# MQTT Events
# Enable or disable MQTT event publishing:
aas.events=NONE
#aas.events=MQTT

# AASX Upload
# Enable or disable AASX file upload functionality:
#aas.aasxUpload=Disabled
aas.aasxUpload=Enabled


##########################
# Registry
##########################
# If specified, can directly register the AAS that has been loaded from the source file

# Path specifies the registry endpoint
#  why does this only work when setting it to regisrty and not localhost? because it is the name of the container, given that we have 
#  different containers and each is seperated in it's own environment
registry.path=http://registry:4000/registry

# Hostpath specifies the endpoint of the deployed AAS component
# If hostpath is empty, the registered AAS endpoint is derived from the context properties
# Change to match the port of the local host if you want the endpoints to be directly useable without needing to change 
# from docker internal port to host port number
# registry.hostpath=http://localhost:8081/aas/
# registry.hostpath=http://www.myProxy.de/aas/
